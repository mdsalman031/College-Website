{"ast":null,"code":"var _jsxFileName = \"D:\\\\college-website-project\\\\src\\\\TakeAttendance.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const TakeAttendance = () => {\n//   const [departments, setDepartments] = useState([]);\n//   const [semesterOptions] = useState([1, 2, 3, 4, 5, 6]);\n//   const [department, setDepartment] = useState('');\n//   const [semester, setSemester] = useState('');\n//   const [subject, setSubject] = useState('');\n//   const [attendanceResults, setAttendanceResults] = useState([]);\n//   const [showDateInput, setShowDateInput] = useState(false);\n//   const [attendanceStatusArray, setAttendanceStatusArray] = useState([]);\n//   const [attendanceDate, setAttendanceDate] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Fetch departments from the server using Axios\n//     fetchDepartments();\n//   }, []);\n\n//   const fetchDepartments = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:3000/api/departments');\n//       setDepartments(response.data);\n//     } catch (error) {\n//       console.error('Error fetching departments:', error);\n//     }\n//   };\n\n//   const updateStatus = (index) => {\n//     setAttendanceStatusArray((prevArray) => {\n//       const newArray = [...prevArray];\n//       newArray[index] = newArray[index] === 'A' ? 'P' : 'A';\n//       return newArray;\n//     });\n//   };\n\n//   const submitAttendance = () => {\n//     if (department && semester && subject) {\n//       // Call the API endpoint to mark attendance\n//       axios.post('http://localhost:3000/api/student_details', { department, semester, subject })\n//         .then(response => {\n//           // Handle the response if needed\n//           console.log('Student details:', response.data);\n//           // Update the state with the results\n//           setAttendanceResults(response.data);\n\n//           // Initialize array based on fetched data\n//           setAttendanceStatusArray(new Array(response.data.length).fill('A'));\n\n//           // Show the date input after fetching student details\n//           setShowDateInput(true);\n//         })\n//         .catch(error => {\n//           // Handle errors\n//           console.error('Error fetching student details:', error);\n//         });\n//     } else {\n//       alert('Please fill in all the fields');\n//     }\n//   };\n\n//   const submitAttendanceDate = () => {\n//     // Handle submitting the attendance date to api/date_attendance\n//     if (!attendanceDate) {\n//       alert('Please enter a valid date.');\n//       return;\n//     }\n\n//     // Make a POST request to the api/date_attendance endpoint with the entered date\n//     axios.post('http://localhost:3000/api/date_attendance', {\n//       attendanceDate: attendanceDate,\n//     })\n//       .then(dateResponse => {\n//         console.log('Date sent to the server successfully', dateResponse.data);\n//         alert(\"Today's attendance added successfully\");\n//       })\n//       .catch(dateError => {\n//         console.error('Error sending date to the server:', dateError);\n//         alert(\"Error submitting today's Attendance. Please try again.\")\n//       });\n\n//     // Reset state and hide date input after submission\n//     setAttendanceDate('');\n//     setShowDateInput(false);\n//   };\n\n//   return (\n//     <div>\n//       <label>\n//         Department:\n//         <select\n//           value={department}\n//           onChange={(e) => setDepartment(e.target.value)}\n//           required\n//           style={{ margin: '20px', fontSize: '20px' }}\n//         >\n//           <option value=\"\" disabled>Select Department</option>\n//           {departments.map((dept) => (\n//             <option key={dept.D_id} value={dept.D_name}>\n//               {dept.D_name}\n//             </option>\n//           ))}\n//         </select>\n//       </label>\n//       <br />\n//       <label>\n//         Semester:\n//         <select\n//           value={semester}\n//           onChange={(e) => setSemester(e.target.value)}\n//           required\n//           style={{ margin: '20px', fontSize: '20px' }}\n//         >\n//           <option value=\"\" disabled>Select Semester</option>\n//           {semesterOptions.map((sem) => (\n//             <option key={sem} value={sem}>\n//               {sem}\n//             </option>\n//           ))}\n//         </select>\n//       </label>\n//       <br />\n//       <label>\n//         Subject:\n//         <input\n//           type=\"text\"\n//           value={subject}\n//           onInput={(e) => {\n//             const inputValue = e.target.value;\n//             if (/^[a-zA-Z0-9_]+$/.test(inputValue)) {\n//               setSubject(inputValue);\n//             }\n//           }}\n//           pattern=\"[a-zA-Z0-9_]+\"\n//           title=\"Only letters, numbers, and underscores are allowed\"\n//           required\n//           style={{ margin: '20px', fontSize: '20px' }}\n//         />\n//       </label>\n//       <br />\n//       <button onClick={submitAttendance} style={{ margin: '20px', fontSize: '20px' }}>Mark Attendance</button>\n\n//       {showDateInput && (\n//         <>\n//           <label htmlFor=\"attendanceDate\">Enter Attendance Date:</label>\n//           <input\n//             type=\"date\"\n//             id=\"attendanceDate\"\n//             value={attendanceDate}\n//             onChange={(e) => setAttendanceDate(e.target.value)}\n//           />\n//           <button onClick={submitAttendanceDate}>Submit Attendance Date</button>\n//         </>\n//       )}\n\n//       {attendanceResults.length > 0 ? (\n//         <>\n//           <h2>Attendance Table</h2>\n//           <table border=\"1\" width=\"60%\" style={{ textAlign: 'center' }}>\n//             <thead>\n//               <tr>\n//                 <th>Pin</th>\n//                 <th>Name</th>\n//                 <th>Status</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {attendanceResults.map((student, index) => (\n//                 <tr key={index}>\n//                   <td>{student.s_id}</td>\n//                   <td>{student.sname}</td>\n//                   <td><input type=\"checkbox\" id={`status${index}`} onClick={() => updateStatus(index)} /></td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n\n//           <button onClick={submitAttendance}>Submit</button>\n\n//           <div>\n//             <p>Click this button to add Complete today's Attendance</p>\n//             <p>Note:-<span style={{color:'red'}}>select this only after taking all subjects Attendance</span></p>\n//             <button onClick={() => setShowDateInput(true)}>Enter Date</button>\n//           </div>\n\n//           <div id=\"attendanceResult\"></div>\n//         </>\n//       ) : (\n//         <div>\n//           <p>No students are enrolled in the specified department and semester.</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default TakeAttendance;\n\n// TakeAttendance.jsx\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Add this line\nimport AttendanceInput from './AttendanceInput.jsx';\nimport AttendanceTable from './AttendanceTable.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TakeAttendance = () => {\n  _s();\n  const [attendanceStatusArray, setAttendanceStatusArray] = useState([]);\n  const navigate = useNavigate();\n  const yourExportFunction = data => {\n    console.log('Exported data:', data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AttendanceInput, {\n      onExport: yourExportFunction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AttendanceTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(TakeAttendance, \"lkaEt9Ppw3chM2YGnyk97KJAOOk=\", false, function () {\n  return [useNavigate];\n});\n_c = TakeAttendance;\nexport default TakeAttendance;\nvar _c;\n$RefreshReg$(_c, \"TakeAttendance\");","map":{"version":3,"names":["React","useState","useNavigate","AttendanceInput","AttendanceTable","jsxDEV","_jsxDEV","TakeAttendance","_s","attendanceStatusArray","setAttendanceStatusArray","navigate","yourExportFunction","data","console","log","children","onExport","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/college-website-project/src/TakeAttendance.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const TakeAttendance = () => {\r\n//   const [departments, setDepartments] = useState([]);\r\n//   const [semesterOptions] = useState([1, 2, 3, 4, 5, 6]);\r\n//   const [department, setDepartment] = useState('');\r\n//   const [semester, setSemester] = useState('');\r\n//   const [subject, setSubject] = useState('');\r\n//   const [attendanceResults, setAttendanceResults] = useState([]);\r\n//   const [showDateInput, setShowDateInput] = useState(false);\r\n//   const [attendanceStatusArray, setAttendanceStatusArray] = useState([]);\r\n//   const [attendanceDate, setAttendanceDate] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Fetch departments from the server using Axios\r\n//     fetchDepartments();\r\n//   }, []);\r\n\r\n//   const fetchDepartments = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:3000/api/departments');\r\n//       setDepartments(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching departments:', error);\r\n//     }\r\n//   };\r\n\r\n//   const updateStatus = (index) => {\r\n//     setAttendanceStatusArray((prevArray) => {\r\n//       const newArray = [...prevArray];\r\n//       newArray[index] = newArray[index] === 'A' ? 'P' : 'A';\r\n//       return newArray;\r\n//     });\r\n//   };\r\n\r\n//   const submitAttendance = () => {\r\n//     if (department && semester && subject) {\r\n//       // Call the API endpoint to mark attendance\r\n//       axios.post('http://localhost:3000/api/student_details', { department, semester, subject })\r\n//         .then(response => {\r\n//           // Handle the response if needed\r\n//           console.log('Student details:', response.data);\r\n//           // Update the state with the results\r\n//           setAttendanceResults(response.data);\r\n\r\n//           // Initialize array based on fetched data\r\n//           setAttendanceStatusArray(new Array(response.data.length).fill('A'));\r\n\r\n//           // Show the date input after fetching student details\r\n//           setShowDateInput(true);\r\n//         })\r\n//         .catch(error => {\r\n//           // Handle errors\r\n//           console.error('Error fetching student details:', error);\r\n//         });\r\n//     } else {\r\n//       alert('Please fill in all the fields');\r\n//     }\r\n//   };\r\n\r\n//   const submitAttendanceDate = () => {\r\n//     // Handle submitting the attendance date to api/date_attendance\r\n//     if (!attendanceDate) {\r\n//       alert('Please enter a valid date.');\r\n//       return;\r\n//     }\r\n\r\n//     // Make a POST request to the api/date_attendance endpoint with the entered date\r\n//     axios.post('http://localhost:3000/api/date_attendance', {\r\n//       attendanceDate: attendanceDate,\r\n//     })\r\n//       .then(dateResponse => {\r\n//         console.log('Date sent to the server successfully', dateResponse.data);\r\n//         alert(\"Today's attendance added successfully\");\r\n//       })\r\n//       .catch(dateError => {\r\n//         console.error('Error sending date to the server:', dateError);\r\n//         alert(\"Error submitting today's Attendance. Please try again.\")\r\n//       });\r\n\r\n//     // Reset state and hide date input after submission\r\n//     setAttendanceDate('');\r\n//     setShowDateInput(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <label>\r\n//         Department:\r\n//         <select\r\n//           value={department}\r\n//           onChange={(e) => setDepartment(e.target.value)}\r\n//           required\r\n//           style={{ margin: '20px', fontSize: '20px' }}\r\n//         >\r\n//           <option value=\"\" disabled>Select Department</option>\r\n//           {departments.map((dept) => (\r\n//             <option key={dept.D_id} value={dept.D_name}>\r\n//               {dept.D_name}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Semester:\r\n//         <select\r\n//           value={semester}\r\n//           onChange={(e) => setSemester(e.target.value)}\r\n//           required\r\n//           style={{ margin: '20px', fontSize: '20px' }}\r\n//         >\r\n//           <option value=\"\" disabled>Select Semester</option>\r\n//           {semesterOptions.map((sem) => (\r\n//             <option key={sem} value={sem}>\r\n//               {sem}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Subject:\r\n//         <input\r\n//           type=\"text\"\r\n//           value={subject}\r\n//           onInput={(e) => {\r\n//             const inputValue = e.target.value;\r\n//             if (/^[a-zA-Z0-9_]+$/.test(inputValue)) {\r\n//               setSubject(inputValue);\r\n//             }\r\n//           }}\r\n//           pattern=\"[a-zA-Z0-9_]+\"\r\n//           title=\"Only letters, numbers, and underscores are allowed\"\r\n//           required\r\n//           style={{ margin: '20px', fontSize: '20px' }}\r\n//         />\r\n//       </label>\r\n//       <br />\r\n//       <button onClick={submitAttendance} style={{ margin: '20px', fontSize: '20px' }}>Mark Attendance</button>\r\n\r\n//       {showDateInput && (\r\n//         <>\r\n//           <label htmlFor=\"attendanceDate\">Enter Attendance Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             id=\"attendanceDate\"\r\n//             value={attendanceDate}\r\n//             onChange={(e) => setAttendanceDate(e.target.value)}\r\n//           />\r\n//           <button onClick={submitAttendanceDate}>Submit Attendance Date</button>\r\n//         </>\r\n//       )}\r\n\r\n//       {attendanceResults.length > 0 ? (\r\n//         <>\r\n//           <h2>Attendance Table</h2>\r\n//           <table border=\"1\" width=\"60%\" style={{ textAlign: 'center' }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Pin</th>\r\n//                 <th>Name</th>\r\n//                 <th>Status</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {attendanceResults.map((student, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{student.s_id}</td>\r\n//                   <td>{student.sname}</td>\r\n//                   <td><input type=\"checkbox\" id={`status${index}`} onClick={() => updateStatus(index)} /></td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n\r\n//           <button onClick={submitAttendance}>Submit</button>\r\n\r\n//           <div>\r\n//             <p>Click this button to add Complete today's Attendance</p>\r\n//             <p>Note:-<span style={{color:'red'}}>select this only after taking all subjects Attendance</span></p>\r\n//             <button onClick={() => setShowDateInput(true)}>Enter Date</button>\r\n//           </div>\r\n\r\n//           <div id=\"attendanceResult\"></div>\r\n//         </>\r\n//       ) : (\r\n//         <div>\r\n//           <p>No students are enrolled in the specified department and semester.</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TakeAttendance;\r\n\r\n// TakeAttendance.jsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // Add this line\r\nimport AttendanceInput from './AttendanceInput.jsx';\r\nimport AttendanceTable from './AttendanceTable.jsx';\r\n\r\nconst TakeAttendance = () => {\r\n  const [attendanceStatusArray, setAttendanceStatusArray] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const yourExportFunction = (data) => {\r\n    console.log('Exported data:', data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AttendanceInput onExport={yourExportFunction} />\r\n      <AttendanceTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TakeAttendance;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AACjD,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAOC,eAAe,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,kBAAkB,GAAIC,IAAI,IAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;EACrC,CAAC;EAED,oBACEP,OAAA;IAAAU,QAAA,gBACEV,OAAA,CAACH,eAAe;MAACc,QAAQ,EAAEL;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDf,OAAA,CAACF,eAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACb,EAAA,CAdID,cAAc;EAAA,QAEDL,WAAW;AAAA;AAAAoB,EAAA,GAFxBf,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}