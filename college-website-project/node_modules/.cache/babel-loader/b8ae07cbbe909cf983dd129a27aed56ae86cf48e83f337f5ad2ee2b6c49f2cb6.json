{"ast":null,"code":"var _jsxFileName = \"D:\\\\college-website-project\\\\src\\\\textContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextContainer(props) {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const containerStyle = {\n    padding: '20px',\n    textAlign: 'left',\n    margin: '20px',\n    fontFamily: 'Arial, sans-serif',\n    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    overflow: 'hidden',\n    position: 'relative'\n  };\n  const toggleExpansion = () => {\n    setIsExpanded(!isExpanded);\n  };\n  const truncateText = (text, limit) => {\n    const words = text.split(' ');\n    return words.slice(0, limit).join(' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: `10px solid ${props.headingColor || 'green'}`\n      },\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 101\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [isExpanded ? props.info : truncateText(props.info, 60), !isExpanded && props.info.split(' ').length > 60 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-link\",\n        onClick: toggleExpansion,\n        children: \"Read More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(TextContainer, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n_c = TextContainer;\nvar _c;\n$RefreshReg$(_c, \"TextContainer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextContainer","props","_s","isExpanded","setIsExpanded","containerStyle","padding","textAlign","margin","fontFamily","boxShadow","backgroundColor","borderRadius","overflow","position","toggleExpansion","truncateText","text","limit","words","split","slice","join","style","children","color","headingColor","title","fileName","_jsxFileName","lineNumber","columnNumber","info","length","className","onClick","_c","$RefreshReg$"],"sources":["D:/college-website-project/src/textContainer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function TextContainer(props) {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n    const containerStyle = {\r\n        padding: '20px',\r\n        textAlign: 'left',\r\n        margin: '20px',\r\n        fontFamily: 'Arial, sans-serif',\r\n        boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\r\n        backgroundColor: 'white',\r\n        borderRadius: '8px',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n    };\r\n\r\n    const toggleExpansion = () => {\r\n        setIsExpanded(!isExpanded);\r\n    };\r\n\r\n    const truncateText = (text, limit) => {\r\n        const words = text.split(' ');\r\n        return words.slice(0, limit).join(' ');\r\n    };\r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            <h1 style={{ color: `10px solid ${props.headingColor || 'green'}` }}>{props.title}</h1> <hr />\r\n            <p>\r\n                {isExpanded ? props.info : truncateText(props.info, 60)}\r\n                {!isExpanded && props.info.split(' ').length > 60 && (\r\n                    <button className=\"btn btn-link\" onClick={toggleExpansion}>\r\n                        Read More\r\n                    </button>\r\n                )}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMQ,cAAc,GAAG;IACnBC,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE,MAAM;IACjBC,MAAM,EAAE,MAAM;IACdC,UAAU,EAAE,mBAAmB;IAC/BC,SAAS,EAAE,2BAA2B;IACtCC,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE;EACd,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1BX,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMa,YAAY,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAClC,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;IAC7B,OAAOD,KAAK,CAACE,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;EAC1C,CAAC;EAED,oBACIvB,OAAA;IAAKwB,KAAK,EAAElB,cAAe;IAAAmB,QAAA,gBACvBzB,OAAA;MAAIwB,KAAK,EAAE;QAAEE,KAAK,EAAG,cAAaxB,KAAK,CAACyB,YAAY,IAAI,OAAQ;MAAE,CAAE;MAAAF,QAAA,EAAEvB,KAAK,CAAC0B;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAAAhC,OAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9FhC,OAAA;MAAAyB,QAAA,GACKrB,UAAU,GAAGF,KAAK,CAAC+B,IAAI,GAAGhB,YAAY,CAACf,KAAK,CAAC+B,IAAI,EAAE,EAAE,CAAC,EACtD,CAAC7B,UAAU,IAAIF,KAAK,CAAC+B,IAAI,CAACZ,KAAK,CAAC,GAAG,CAAC,CAACa,MAAM,GAAG,EAAE,iBAC7ClC,OAAA;QAAQmC,SAAS,EAAC,cAAc;QAACC,OAAO,EAAEpB,eAAgB;QAAAS,QAAA,EAAC;MAE3D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAAC7B,EAAA,CArCuBF,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}