{"ast":null,"code":"var _jsxFileName = \"D:\\\\college-website-project\\\\src\\\\EventModal.jsx\",\n  _s = $RefreshSig$();\n// EventModal.jsx\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventModal = ({\n  date,\n  existingEvent,\n  closeModal,\n  handleEventSave,\n  handleDeleteEvent\n}) => {\n  _s();\n  const [eventName, setEventName] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  useEffect(() => {\n    if (existingEvent) {\n      setEventName(existingEvent.eventName);\n      setEventDescription(existingEvent.eventDescription);\n    } else {\n      setEventName('');\n      setEventDescription('');\n    }\n  }, [date, existingEvent]);\n  const handleSaveEvent = () => {\n    handleEventSave(eventName, eventDescription);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: closeModal,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [existingEvent ? 'Edit Event' : 'Add Event', \" for \", date.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value),\n        placeholder: \"Enter event name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: eventDescription,\n        onChange: e => setEventDescription(e.target.value),\n        placeholder: \"Enter event description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveEvent,\n        children: existingEvent ? 'Update Event' : 'Save Event'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), existingEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteEvent(existingEvent._id),\n          className: \"delete-event-btn\",\n          children: \"Delete Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(EventModal, \"i+r9UiELfEwKbNmJI3+wYWWowT8=\");\n_c = EventModal;\nexport default EventModal;\nvar _c;\n$RefreshReg$(_c, \"EventModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EventModal","date","existingEvent","closeModal","handleEventSave","handleDeleteEvent","_s","eventName","setEventName","eventDescription","setEventDescription","handleSaveEvent","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toDateString","type","value","onChange","e","target","placeholder","_id","_c","$RefreshReg$"],"sources":["D:/college-website-project/src/EventModal.jsx"],"sourcesContent":["// EventModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst EventModal = ({ date, existingEvent, closeModal, handleEventSave, handleDeleteEvent }) => {\r\n  const [eventName, setEventName] = useState('');\r\n  const [eventDescription, setEventDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (existingEvent) {\r\n      setEventName(existingEvent.eventName);\r\n      setEventDescription(existingEvent.eventDescription);\r\n    } else {\r\n      setEventName('');\r\n      setEventDescription('');\r\n    }\r\n  }, [date, existingEvent]);\r\n\r\n  const handleSaveEvent = () => {\r\n    handleEventSave(eventName, eventDescription);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <span className=\"close\" onClick={closeModal}>\r\n          &times;\r\n        </span>\r\n        <h3>{existingEvent ? 'Edit Event' : 'Add Event'} for {date.toDateString()}</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={eventName}\r\n          onChange={(e) => setEventName(e.target.value)}\r\n          placeholder=\"Enter event name\"\r\n        />\r\n        <textarea\r\n          value={eventDescription}\r\n          onChange={(e) => setEventDescription(e.target.value)}\r\n          placeholder=\"Enter event description\"\r\n        />\r\n        <button onClick={handleSaveEvent}>\r\n          {existingEvent ? 'Update Event' : 'Save Event'}\r\n        </button>\r\n        {existingEvent && (\r\n          <div>\r\n            <button onClick={() => handleDeleteEvent(existingEvent._id)} className=\"delete-event-btn\">\r\n              Delete Event\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}