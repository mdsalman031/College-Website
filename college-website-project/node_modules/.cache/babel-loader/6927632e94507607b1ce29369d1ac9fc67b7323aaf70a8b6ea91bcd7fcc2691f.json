{"ast":null,"code":"var _jsxFileName = \"D:\\\\college-website-project\\\\src\\\\textContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextContainer(props) {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const containerStyle = {\n    padding: '20px',\n    textAlign: 'left',\n    // margin: '20px',\n    fontFamily: 'Arial, sans-serif',\n    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n    backgroundColor: 'white',\n    borderRadius: '8px'\n  };\n  const toggleExpansion = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // Convert props.info to a string if it's an object\n  const infoString = typeof props.info === 'object' ? JSON.stringify(props.info) : props.info;\n  const truncatedInfo = `${props.info.toString().slice(0, 60)}${props.info.length > 60 ? '...' : ''}`;\n  return (\n    /*#__PURE__*/\n    // <div style={containerStyle}>\n    //     <h1 style={{ color: `10px solid ${props.headingColor || 'green'}` }}>{props.title}</h1> <hr />\n    //     <p>\n    //         {isExpanded ? infoString : truncatedInfo}\n    //         {infoString.length > 60 && (\n    //             <button className=\"btn btn-link\" onClick={toggleExpansion}>\n    //                 {isExpanded ? 'Read Less' : 'Read More'}\n    //             </button>\n    //         )}\n    //     </p>\n    // </div>\n    _jsxDEV(\"div\", {\n      class: \"card border-light mb-3\",\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-header\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: [isExpanded ? infoString : truncatedInfo, infoString.length > 60 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-link\",\n            onClick: toggleExpansion,\n            children: isExpanded ? 'Read Less' : 'Read More'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(TextContainer, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n_c = TextContainer;\nTextContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  info: PropTypes.string.isRequired,\n  headingColor: PropTypes.string\n  // ... other prop types\n};\nvar _c;\n$RefreshReg$(_c, \"TextContainer\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","TextContainer","props","_s","isExpanded","setIsExpanded","containerStyle","padding","textAlign","fontFamily","boxShadow","backgroundColor","borderRadius","toggleExpansion","infoString","info","JSON","stringify","truncatedInfo","toString","slice","length","class","style","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","propTypes","string","isRequired","headingColor","$RefreshReg$"],"sources":["D:/college-website-project/src/textContainer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TextContainer(props) {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n    const containerStyle = {\r\n        padding: '20px',\r\n        textAlign: 'left',\r\n        // margin: '20px',\r\n        fontFamily: 'Arial, sans-serif',\r\n        boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\r\n        backgroundColor: 'white',\r\n        borderRadius: '8px'\r\n    };\r\n\r\n    const toggleExpansion = () => {\r\n        setIsExpanded(!isExpanded);\r\n    };\r\n\r\n    // Convert props.info to a string if it's an object\r\n    const infoString = typeof props.info === 'object' ? JSON.stringify(props.info) : props.info;\r\n\r\n    const truncatedInfo = `${props.info.toString().slice(0, 60)}${props.info.length > 60 ? '...' : ''}`;\r\n\r\n    return (\r\n        // <div style={containerStyle}>\r\n        //     <h1 style={{ color: `10px solid ${props.headingColor || 'green'}` }}>{props.title}</h1> <hr />\r\n        //     <p>\r\n        //         {isExpanded ? infoString : truncatedInfo}\r\n        //         {infoString.length > 60 && (\r\n        //             <button className=\"btn btn-link\" onClick={toggleExpansion}>\r\n        //                 {isExpanded ? 'Read Less' : 'Read More'}\r\n        //             </button>\r\n        //         )}\r\n        //     </p>\r\n        // </div>\r\n        <div class=\"card border-light mb-3\" style={containerStyle}>\r\n  <div class=\"card-header\">{props.title}</div>\r\n  <div class=\"card-body\">\r\n    {/* <h5 class=\"card-title\">Light card title</h5> */}\r\n    <p class=\"card-text\">\r\n                {isExpanded ? infoString : truncatedInfo}\r\n                {infoString.length > 60 && (\r\n                    <button className=\"btn btn-link\" onClick={toggleExpansion}>\r\n                        {isExpanded ? 'Read Less' : 'Read More'}\r\n                    </button>\r\n                )}\r\n    </p>\r\n  </div>\r\n</div>\r\n    );\r\n}\r\n\r\nTextContainer.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    info: PropTypes.string.isRequired,\r\n    headingColor: PropTypes.string,\r\n    // ... other prop types\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,cAAc,GAAG;IACnBC,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE,MAAM;IACjB;IACAC,UAAU,EAAE,mBAAmB;IAC/BC,SAAS,EAAE,2BAA2B;IACtCC,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE;EAClB,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1BR,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMU,UAAU,GAAG,OAAOZ,KAAK,CAACa,IAAI,KAAK,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACf,KAAK,CAACa,IAAI,CAAC,GAAGb,KAAK,CAACa,IAAI;EAE3F,MAAMG,aAAa,GAAI,GAAEhB,KAAK,CAACa,IAAI,CAACI,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAE,GAAElB,KAAK,CAACa,IAAI,CAACM,MAAM,GAAG,EAAE,GAAG,KAAK,GAAG,EAAG,EAAC;EAEnG;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACArB,OAAA;MAAKsB,KAAK,EAAC,wBAAwB;MAACC,KAAK,EAAEjB,cAAe;MAAAkB,QAAA,gBAChExB,OAAA;QAAKsB,KAAK,EAAC,aAAa;QAAAE,QAAA,EAAEtB,KAAK,CAACuB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5C7B,OAAA;QAAKsB,KAAK,EAAC,WAAW;QAAAE,QAAA,eAEpBxB,OAAA;UAAGsB,KAAK,EAAC,WAAW;UAAAE,QAAA,GACPpB,UAAU,GAAGU,UAAU,GAAGI,aAAa,EACvCJ,UAAU,CAACO,MAAM,GAAG,EAAE,iBACnBrB,OAAA;YAAQ8B,SAAS,EAAC,cAAc;YAACC,OAAO,EAAElB,eAAgB;YAAAW,QAAA,EACrDpB,UAAU,GAAG,WAAW,GAAG;UAAW;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEN;AAAC1B,EAAA,CAjDuBF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAmDrCA,aAAa,CAACgC,SAAS,GAAG;EACtBR,KAAK,EAAE3B,SAAS,CAACoC,MAAM,CAACC,UAAU;EAClCpB,IAAI,EAAEjB,SAAS,CAACoC,MAAM,CAACC,UAAU;EACjCC,YAAY,EAAEtC,SAAS,CAACoC;EACxB;AACJ,CAAC;AAAC,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}