{"ast":null,"code":"var _jsxFileName = \"D:\\\\college-website-project\\\\src\\\\EventManagement.jsx\",\n  _s = $RefreshSig$();\n// CustomCalendar.js\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport EventModal from './EventModal';\nimport './CustomCalendar.css'; // Import your styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomCalendar = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // Fetch events for the selected date from your data source\n    // For demonstration purposes, we'll use local storage\n    const storedEvents = JSON.parse(localStorage.getItem('events')) || [];\n    const eventsForDate = storedEvents.filter(event => event.date === selectedDate.toDateString());\n    setEvents(eventsForDate);\n  }, [selectedDate]);\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n  const handleEventSave = () => {\n    // This function can be used to trigger fetching events after saving in the modal\n    const storedEvents = JSON.parse(localStorage.getItem('events')) || [];\n    const eventsForDate = storedEvents.filter(event => event.date === selectedDate.toDateString());\n    setEvents(eventsForDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateClick,\n      value: selectedDate,\n      className: \"custom-calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(EventModal, {\n      date: selectedDate,\n      closeModal: () => setModalOpen(false),\n      handleEventSave: handleEventSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Events for \", selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), events.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No events for this date.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: event.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomCalendar, \"XtyP1GEwC5bU0k3LMOL1CFin8xs=\");\n_c = CustomCalendar;\nexport default CustomCalendar;\nvar _c;\n$RefreshReg$(_c, \"CustomCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","EventModal","jsxDEV","_jsxDEV","CustomCalendar","_s","selectedDate","setSelectedDate","Date","isModalOpen","setModalOpen","events","setEvents","storedEvents","JSON","parse","localStorage","getItem","eventsForDate","filter","event","date","toDateString","handleDateClick","handleEventSave","className","children","onClickDay","value","fileName","_jsxFileName","lineNumber","columnNumber","closeModal","length","map","index","text","_c","$RefreshReg$"],"sources":["D:/college-website-project/src/EventManagement.jsx"],"sourcesContent":["// CustomCalendar.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport EventModal from './EventModal';\r\nimport './CustomCalendar.css'; // Import your styles\r\n\r\nconst CustomCalendar = () => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch events for the selected date from your data source\r\n    // For demonstration purposes, we'll use local storage\r\n    const storedEvents = JSON.parse(localStorage.getItem('events')) || [];\r\n    const eventsForDate = storedEvents.filter((event) => event.date === selectedDate.toDateString());\r\n    setEvents(eventsForDate);\r\n  }, [selectedDate]);\r\n\r\n  const handleDateClick = (date) => {\r\n    setSelectedDate(date);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleEventSave = () => {\r\n    // This function can be used to trigger fetching events after saving in the modal\r\n    const storedEvents = JSON.parse(localStorage.getItem('events')) || [];\r\n    const eventsForDate = storedEvents.filter((event) => event.date === selectedDate.toDateString());\r\n    setEvents(eventsForDate);\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-calendar-container\">\r\n      <Calendar\r\n        onClickDay={handleDateClick}\r\n        value={selectedDate}\r\n        className=\"custom-calendar\"\r\n      />\r\n      {isModalOpen && (\r\n        <EventModal\r\n          date={selectedDate}\r\n          closeModal={() => setModalOpen(false)}\r\n          handleEventSave={handleEventSave}\r\n        />\r\n      )}\r\n      <div className=\"event-list\">\r\n        <h4>Events for {selectedDate.toDateString()}</h4>\r\n        {events.length === 0 ? (\r\n          <p>No events for this date.</p>\r\n        ) : (\r\n          <ul>\r\n            {events.map((event, index) => (\r\n              <li key={index}>{event.text}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}