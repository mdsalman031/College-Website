{"ast":null,"code":"var _jsxFileName = \"D:\\\\college-website-project\\\\src\\\\EventModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventModal = ({\n  date,\n  existingEvent,\n  closeModal,\n  handleEventSave,\n  handleDeleteEvent\n}) => {\n  _s();\n  const [eventText, setEventText] = useState('');\n  const [currentEvent, setCurrentEvent] = useState(existingEvent);\n  useEffect(() => {\n    // No need to fetch events here since we are fetching them in EventManagement.js\n    // ...\n\n    if (existingEvent) {\n      setCurrentEvent(existingEvent);\n      setEventText(existingEvent.text);\n    } else {\n      setCurrentEvent(null);\n      setEventText('');\n    }\n  }, [date, existingEvent]);\n  const handleSaveEvent = () => {\n    console.log('Saving event...');\n    const newEvent = {\n      date: selectedDate.toDateString(),\n      text: eventText\n    };\n    fetch('/api/events', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newEvent)\n    }).then(response => response.json()).then(() => {\n      console.log('Event saved successfully!');\n      setModalOpen(false);\n    }).catch(error => {\n      console.error('Error saving event:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: closeModal,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [currentEvent ? 'Edit Event' : 'Add Event', \" for \", date.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: eventText,\n        onChange: e => setEventText(e.target.value),\n        placeholder: \"Enter event description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveEvent,\n        children: currentEvent ? 'Update Event' : 'Save Event'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), currentEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteEvent,\n          className: \"delete-event-btn\",\n          children: \"Delete Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentEvent(null),\n          children: \"Add Another Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(EventModal, \"NbEXx6adrKNw7Cu8nZq/gCnvbFs=\");\n_c = EventModal;\nexport default EventModal;\nvar _c;\n$RefreshReg$(_c, \"EventModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EventModal","date","existingEvent","closeModal","handleEventSave","handleDeleteEvent","_s","eventText","setEventText","currentEvent","setCurrentEvent","text","handleSaveEvent","console","log","newEvent","selectedDate","toDateString","fetch","method","headers","body","JSON","stringify","then","response","json","setModalOpen","catch","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/college-website-project/src/EventModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst EventModal = ({ date, existingEvent, closeModal, handleEventSave, handleDeleteEvent }) => {\r\n  const [eventText, setEventText] = useState('');\r\n  const [currentEvent, setCurrentEvent] = useState(existingEvent);\r\n\r\n  useEffect(() => {\r\n    // No need to fetch events here since we are fetching them in EventManagement.js\r\n    // ...\r\n\r\n    if (existingEvent) {\r\n      setCurrentEvent(existingEvent);\r\n      setEventText(existingEvent.text);\r\n    } else {\r\n      setCurrentEvent(null);\r\n      setEventText('');\r\n    }\r\n  }, [date, existingEvent]);\r\n\r\n  const handleSaveEvent = () => {\r\n    console.log('Saving event...');\r\n    const newEvent = { date: selectedDate.toDateString(), text: eventText };\r\n  \r\n    fetch('/api/events', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newEvent),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        console.log('Event saved successfully!');\r\n        setModalOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error saving event:', error);\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <span className=\"close\" onClick={closeModal}>&times;</span>\r\n        <h3>{currentEvent ? 'Edit Event' : 'Add Event'} for {date.toDateString()}</h3>\r\n        <textarea\r\n          value={eventText}\r\n          onChange={(e) => setEventText(e.target.value)}\r\n          placeholder=\"Enter event description\"\r\n        />\r\n        <button onClick={handleSaveEvent}>{currentEvent ? 'Update Event' : 'Save Event'}</button>\r\n        {currentEvent && (\r\n          <div>\r\n            <button onClick={handleDeleteEvent} className=\"delete-event-btn\">Delete Event</button>\r\n            <button onClick={() => setCurrentEvent(null)}>Add Another Event</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}