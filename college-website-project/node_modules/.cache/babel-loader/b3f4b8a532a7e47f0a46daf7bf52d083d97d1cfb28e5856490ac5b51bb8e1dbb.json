{"ast":null,"code":"var _jsxFileName = \"D:\\\\college-website-project\\\\src\\\\TakeAttendance.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const TakeAttendance = () => {\n//   const [departments, setDepartments] = useState([]);\n//   const [semesterOptions] = useState([1, 2, 3, 4, 5, 6]);\n//   const [department, setDepartment] = useState('');\n//   const [semester, setSemester] = useState('');\n//   const [subject, setSubject] = useState('');\n//   const [attendanceResults, setAttendanceResults] = useState([]);\n//   const [showDateInput, setShowDateInput] = useState(false);\n//   const [attendanceStatusArray, setAttendanceStatusArray] = useState([]);\n//   const [attendanceDate, setAttendanceDate] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Fetch departments from the server using Axios\n//     fetchDepartments();\n//   }, []);\n\n//   const fetchDepartments = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:3000/api/departments');\n//       setDepartments(response.data);\n//     } catch (error) {\n//       console.error('Error fetching departments:', error);\n//     }\n//   };\n\n//   const updateStatus = (index) => {\n//     setAttendanceStatusArray((prevArray) => {\n//       const newArray = [...prevArray];\n//       newArray[index] = newArray[index] === 'A' ? 'P' : 'A';\n//       return newArray;\n//     });\n//   };\n\n//   const submitAttendance = () => {\n//     if (department && semester && subject) {\n//       // Call the API endpoint to mark attendance\n//       axios.post('http://localhost:3000/api/student_details', { department, semester, subject })\n//         .then(response => {\n//           // Handle the response if needed\n//           console.log('Student details:', response.data);\n//           // Update the state with the results\n//           setAttendanceResults(response.data);\n\n//           // Initialize array based on fetched data\n//           setAttendanceStatusArray(new Array(response.data.length).fill('A'));\n\n//           // Show the date input after fetching student details\n//           setShowDateInput(true);\n//         })\n//         .catch(error => {\n//           // Handle errors\n//           console.error('Error fetching student details:', error);\n//         });\n//     } else {\n//       alert('Please fill in all the fields');\n//     }\n//   };\n\n//   const submitAttendanceDate = () => {\n//     // Handle submitting the attendance date to api/date_attendance\n//     if (!attendanceDate) {\n//       alert('Please enter a valid date.');\n//       return;\n//     }\n\n//     // Make a POST request to the api/date_attendance endpoint with the entered date\n//     axios.post('http://localhost:3000/api/date_attendance', {\n//       attendanceDate: attendanceDate,\n//     })\n//       .then(dateResponse => {\n//         console.log('Date sent to the server successfully', dateResponse.data);\n//         alert(\"Today's attendance added successfully\");\n//       })\n//       .catch(dateError => {\n//         console.error('Error sending date to the server:', dateError);\n//         alert(\"Error submitting today's Attendance. Please try again.\")\n//       });\n\n//     // Reset state and hide date input after submission\n//     setAttendanceDate('');\n//     setShowDateInput(false);\n//   };\n\n//   return (\n//     <div>\n//       <label>\n//         Department:\n//         <select\n//           value={department}\n//           onChange={(e) => setDepartment(e.target.value)}\n//           required\n//           style={{ margin: '20px', fontSize: '20px' }}\n//         >\n//           <option value=\"\" disabled>Select Department</option>\n//           {departments.map((dept) => (\n//             <option key={dept.D_id} value={dept.D_name}>\n//               {dept.D_name}\n//             </option>\n//           ))}\n//         </select>\n//       </label>\n//       <br />\n//       <label>\n//         Semester:\n//         <select\n//           value={semester}\n//           onChange={(e) => setSemester(e.target.value)}\n//           required\n//           style={{ margin: '20px', fontSize: '20px' }}\n//         >\n//           <option value=\"\" disabled>Select Semester</option>\n//           {semesterOptions.map((sem) => (\n//             <option key={sem} value={sem}>\n//               {sem}\n//             </option>\n//           ))}\n//         </select>\n//       </label>\n//       <br />\n//       <label>\n//         Subject:\n//         <input\n//           type=\"text\"\n//           value={subject}\n//           onInput={(e) => {\n//             const inputValue = e.target.value;\n//             if (/^[a-zA-Z0-9_]+$/.test(inputValue)) {\n//               setSubject(inputValue);\n//             }\n//           }}\n//           pattern=\"[a-zA-Z0-9_]+\"\n//           title=\"Only letters, numbers, and underscores are allowed\"\n//           required\n//           style={{ margin: '20px', fontSize: '20px' }}\n//         />\n//       </label>\n//       <br />\n//       <button onClick={submitAttendance} style={{ margin: '20px', fontSize: '20px' }}>Mark Attendance</button>\n\n//       {showDateInput && (\n//         <>\n//           <label htmlFor=\"attendanceDate\">Enter Attendance Date:</label>\n//           <input\n//             type=\"date\"\n//             id=\"attendanceDate\"\n//             value={attendanceDate}\n//             onChange={(e) => setAttendanceDate(e.target.value)}\n//           />\n//           <button onClick={submitAttendanceDate}>Submit Attendance Date</button>\n//         </>\n//       )}\n\n//       {attendanceResults.length > 0 ? (\n//         <>\n//           <h2>Attendance Table</h2>\n//           <table border=\"1\" width=\"60%\" style={{ textAlign: 'center' }}>\n//             <thead>\n//               <tr>\n//                 <th>Pin</th>\n//                 <th>Name</th>\n//                 <th>Status</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {attendanceResults.map((student, index) => (\n//                 <tr key={index}>\n//                   <td>{student.s_id}</td>\n//                   <td>{student.sname}</td>\n//                   <td><input type=\"checkbox\" id={`status${index}`} onClick={() => updateStatus(index)} /></td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n\n//           <button onClick={submitAttendance}>Submit</button>\n\n//           <div>\n//             <p>Click this button to add Complete today's Attendance</p>\n//             <p>Note:-<span style={{color:'red'}}>select this only after taking all subjects Attendance</span></p>\n//             <button onClick={() => setShowDateInput(true)}>Enter Date</button>\n//           </div>\n\n//           <div id=\"attendanceResult\"></div>\n//         </>\n//       ) : (\n//         <div>\n//           <p>No students are enrolled in the specified department and semester.</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default TakeAttendance;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TakeAttendance = ({\n  onExport\n}) => {\n  _s();\n  const [departments, setDepartments] = useState([]);\n  const [semesterOptions] = useState([1, 2, 3, 4, 5, 6]);\n  const [department, setDepartment] = useState('');\n  const [semester, setSemester] = useState('');\n  const [subject, setSubject] = useState('');\n  const [studentDetails, setStudentDetails] = useState([]);\n  const [attendanceStatusArray, setAttendanceStatusArray] = useState([]);\n  const [showDateInput, setShowDateInput] = useState(false);\n  const [attendanceDate, setAttendanceDate] = useState('');\n  const [navigate] = useNavigate();\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/departments');\n      setDepartments(response.data);\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n    }\n  };\n  const submitInput = () => {\n    if (department && semester && subject) {\n      onExport({\n        department,\n        semester,\n        subject\n      });\n      navigate('/takeAttendance');\n      axios.post('http://localhost:3000/api/student_details', {\n        department,\n        semester,\n        subject\n      }).then(response => {\n        setStudentDetails(response.data);\n        setAttendanceStatusArray(new Array(response.data.length).fill('A'));\n      }).catch(error => {\n        console.error('Error fetching student details:', error);\n      });\n    } else {\n      alert('Please fill in all the fields');\n    }\n  };\n  const updateStatus = index => {\n    setAttendanceStatusArray(prevArray => {\n      const newArray = [...prevArray];\n      newArray[index] = newArray[index] === 'A' ? 'P' : 'A';\n      return newArray;\n    });\n  };\n  const submitAttendance = () => {\n    if (studentDetails.length === 0) {\n      alert('No students are enrolled in the specified department and semester.');\n    } else {\n      axios.post('http://localhost:3000/api/submit_attendance', {\n        attendanceStatusArray: attendanceStatusArray\n      }).then(response => {\n        alert('Attendance submitted successfully.');\n      }).catch(error => {\n        console.error('Error sending attendance status array to the server:', error);\n        alert('Error submitting attendance. Please try again.');\n      });\n    }\n  };\n  const handleEnterDate = () => {\n    setShowDateInput(true);\n  };\n  const submitAttendanceDate = () => {\n    if (!attendanceDate) {\n      alert('Please enter a valid date.');\n      return;\n    }\n    axios.post('http://localhost:3000/api/date_attendance', {\n      attendanceDate: attendanceDate\n    }).then(dateResponse => {\n      alert(\"Today's attendance added successfully\");\n    }).catch(dateError => {\n      console.error('Error sending date to the server:', dateError);\n      alert(\"Error submitting today's Attendance. Please try again.\");\n    });\n    setAttendanceDate('');\n    setShowDateInput(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Department:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: department,\n        onChange: e => setDepartment(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dept.D_name,\n          children: dept.D_name\n        }, dept.D_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Semester:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: semester,\n        onChange: e => setSemester(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), semesterOptions.map(sem => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sem,\n          children: sem\n        }, sem, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Subject:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: subject,\n        onInput: e => {\n          const inputValue = e.target.value;\n          if (/^[a-zA-Z0-9_]+$/.test(inputValue)) {\n            setSubject(inputValue);\n          }\n        },\n        pattern: \"[a-zA-Z0-9_]+\",\n        title: \"Only letters, numbers, and underscores are allowed\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitInput,\n      children: \"Mark Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), studentDetails.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Attendance Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        width: \"60%\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: studentDetails.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.s_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.sname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `status${index}`,\n                onClick: () => updateStatus(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitAttendance,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click this button to add Complete today's Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Note:-\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"select this only after taking all subjects Attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEnterDate,\n          children: \"Enter Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), showDateInput && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"attendanceDate\",\n            children: \"Enter Attendance Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"attendanceDate\",\n            value: attendanceDate,\n            onChange: e => setAttendanceDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitAttendanceDate,\n            children: \"Submit Attendance Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"attendanceResult\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(TakeAttendance, \"w2iJI91s6bC3mGljzbPI3mVGu/I=\", false, function () {\n  return [useNavigate];\n});\n_c = TakeAttendance;\nexport default TakeAttendance;\nvar _c;\n$RefreshReg$(_c, \"TakeAttendance\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","TakeAttendance","onExport","_s","departments","setDepartments","semesterOptions","department","setDepartment","semester","setSemester","subject","setSubject","studentDetails","setStudentDetails","attendanceStatusArray","setAttendanceStatusArray","showDateInput","setShowDateInput","attendanceDate","setAttendanceDate","navigate","fetchDepartments","response","get","data","error","console","submitInput","post","then","Array","length","fill","catch","alert","updateStatus","index","prevArray","newArray","submitAttendance","handleEnterDate","submitAttendanceDate","dateResponse","dateError","children","value","onChange","e","target","required","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","dept","D_name","D_id","sem","type","onInput","inputValue","test","pattern","title","onClick","border","width","style","textAlign","student","s_id","sname","id","color","htmlFor","_c","$RefreshReg$"],"sources":["D:/college-website-project/src/TakeAttendance.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const TakeAttendance = () => {\r\n//   const [departments, setDepartments] = useState([]);\r\n//   const [semesterOptions] = useState([1, 2, 3, 4, 5, 6]);\r\n//   const [department, setDepartment] = useState('');\r\n//   const [semester, setSemester] = useState('');\r\n//   const [subject, setSubject] = useState('');\r\n//   const [attendanceResults, setAttendanceResults] = useState([]);\r\n//   const [showDateInput, setShowDateInput] = useState(false);\r\n//   const [attendanceStatusArray, setAttendanceStatusArray] = useState([]);\r\n//   const [attendanceDate, setAttendanceDate] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Fetch departments from the server using Axios\r\n//     fetchDepartments();\r\n//   }, []);\r\n\r\n//   const fetchDepartments = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:3000/api/departments');\r\n//       setDepartments(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching departments:', error);\r\n//     }\r\n//   };\r\n\r\n//   const updateStatus = (index) => {\r\n//     setAttendanceStatusArray((prevArray) => {\r\n//       const newArray = [...prevArray];\r\n//       newArray[index] = newArray[index] === 'A' ? 'P' : 'A';\r\n//       return newArray;\r\n//     });\r\n//   };\r\n\r\n//   const submitAttendance = () => {\r\n//     if (department && semester && subject) {\r\n//       // Call the API endpoint to mark attendance\r\n//       axios.post('http://localhost:3000/api/student_details', { department, semester, subject })\r\n//         .then(response => {\r\n//           // Handle the response if needed\r\n//           console.log('Student details:', response.data);\r\n//           // Update the state with the results\r\n//           setAttendanceResults(response.data);\r\n\r\n//           // Initialize array based on fetched data\r\n//           setAttendanceStatusArray(new Array(response.data.length).fill('A'));\r\n\r\n//           // Show the date input after fetching student details\r\n//           setShowDateInput(true);\r\n//         })\r\n//         .catch(error => {\r\n//           // Handle errors\r\n//           console.error('Error fetching student details:', error);\r\n//         });\r\n//     } else {\r\n//       alert('Please fill in all the fields');\r\n//     }\r\n//   };\r\n\r\n//   const submitAttendanceDate = () => {\r\n//     // Handle submitting the attendance date to api/date_attendance\r\n//     if (!attendanceDate) {\r\n//       alert('Please enter a valid date.');\r\n//       return;\r\n//     }\r\n\r\n//     // Make a POST request to the api/date_attendance endpoint with the entered date\r\n//     axios.post('http://localhost:3000/api/date_attendance', {\r\n//       attendanceDate: attendanceDate,\r\n//     })\r\n//       .then(dateResponse => {\r\n//         console.log('Date sent to the server successfully', dateResponse.data);\r\n//         alert(\"Today's attendance added successfully\");\r\n//       })\r\n//       .catch(dateError => {\r\n//         console.error('Error sending date to the server:', dateError);\r\n//         alert(\"Error submitting today's Attendance. Please try again.\")\r\n//       });\r\n\r\n//     // Reset state and hide date input after submission\r\n//     setAttendanceDate('');\r\n//     setShowDateInput(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <label>\r\n//         Department:\r\n//         <select\r\n//           value={department}\r\n//           onChange={(e) => setDepartment(e.target.value)}\r\n//           required\r\n//           style={{ margin: '20px', fontSize: '20px' }}\r\n//         >\r\n//           <option value=\"\" disabled>Select Department</option>\r\n//           {departments.map((dept) => (\r\n//             <option key={dept.D_id} value={dept.D_name}>\r\n//               {dept.D_name}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Semester:\r\n//         <select\r\n//           value={semester}\r\n//           onChange={(e) => setSemester(e.target.value)}\r\n//           required\r\n//           style={{ margin: '20px', fontSize: '20px' }}\r\n//         >\r\n//           <option value=\"\" disabled>Select Semester</option>\r\n//           {semesterOptions.map((sem) => (\r\n//             <option key={sem} value={sem}>\r\n//               {sem}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Subject:\r\n//         <input\r\n//           type=\"text\"\r\n//           value={subject}\r\n//           onInput={(e) => {\r\n//             const inputValue = e.target.value;\r\n//             if (/^[a-zA-Z0-9_]+$/.test(inputValue)) {\r\n//               setSubject(inputValue);\r\n//             }\r\n//           }}\r\n//           pattern=\"[a-zA-Z0-9_]+\"\r\n//           title=\"Only letters, numbers, and underscores are allowed\"\r\n//           required\r\n//           style={{ margin: '20px', fontSize: '20px' }}\r\n//         />\r\n//       </label>\r\n//       <br />\r\n//       <button onClick={submitAttendance} style={{ margin: '20px', fontSize: '20px' }}>Mark Attendance</button>\r\n\r\n//       {showDateInput && (\r\n//         <>\r\n//           <label htmlFor=\"attendanceDate\">Enter Attendance Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             id=\"attendanceDate\"\r\n//             value={attendanceDate}\r\n//             onChange={(e) => setAttendanceDate(e.target.value)}\r\n//           />\r\n//           <button onClick={submitAttendanceDate}>Submit Attendance Date</button>\r\n//         </>\r\n//       )}\r\n\r\n//       {attendanceResults.length > 0 ? (\r\n//         <>\r\n//           <h2>Attendance Table</h2>\r\n//           <table border=\"1\" width=\"60%\" style={{ textAlign: 'center' }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Pin</th>\r\n//                 <th>Name</th>\r\n//                 <th>Status</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {attendanceResults.map((student, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{student.s_id}</td>\r\n//                   <td>{student.sname}</td>\r\n//                   <td><input type=\"checkbox\" id={`status${index}`} onClick={() => updateStatus(index)} /></td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n\r\n//           <button onClick={submitAttendance}>Submit</button>\r\n\r\n//           <div>\r\n//             <p>Click this button to add Complete today's Attendance</p>\r\n//             <p>Note:-<span style={{color:'red'}}>select this only after taking all subjects Attendance</span></p>\r\n//             <button onClick={() => setShowDateInput(true)}>Enter Date</button>\r\n//           </div>\r\n\r\n//           <div id=\"attendanceResult\"></div>\r\n//         </>\r\n//       ) : (\r\n//         <div>\r\n//           <p>No students are enrolled in the specified department and semester.</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TakeAttendance;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst TakeAttendance = ({ onExport }) => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [semesterOptions] = useState([1, 2, 3, 4, 5, 6]);\r\n  const [department, setDepartment] = useState('');\r\n  const [semester, setSemester] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n  const [studentDetails, setStudentDetails] = useState([]);\r\n  const [attendanceStatusArray, setAttendanceStatusArray] = useState([]);\r\n  const [showDateInput, setShowDateInput] = useState(false);\r\n  const [attendanceDate, setAttendanceDate] = useState('');\r\n  const [navigate] = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/departments');\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching departments:', error);\r\n    }\r\n  };\r\n\r\n  const submitInput = () => {\r\n    if (department && semester && subject) {\r\n      onExport({ department, semester, subject });\r\n      navigate('/takeAttendance');\r\n      axios.post('http://localhost:3000/api/student_details', { department, semester, subject })\r\n        .then(response => {\r\n          setStudentDetails(response.data);\r\n          setAttendanceStatusArray(new Array(response.data.length).fill('A'));\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching student details:', error);\r\n        });\r\n    } else {\r\n      alert('Please fill in all the fields');\r\n    }\r\n  };\r\n\r\n  const updateStatus = (index) => {\r\n    setAttendanceStatusArray((prevArray) => {\r\n      const newArray = [...prevArray];\r\n      newArray[index] = newArray[index] === 'A' ? 'P' : 'A';\r\n      return newArray;\r\n    });\r\n  };\r\n\r\n  const submitAttendance = () => {\r\n    if (studentDetails.length === 0) {\r\n      alert('No students are enrolled in the specified department and semester.');\r\n    } else {\r\n      axios.post('http://localhost:3000/api/submit_attendance', {\r\n        attendanceStatusArray: attendanceStatusArray,\r\n      })\r\n        .then(response => {\r\n          alert('Attendance submitted successfully.');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error sending attendance status array to the server:', error);\r\n          alert('Error submitting attendance. Please try again.');\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleEnterDate = () => {\r\n    setShowDateInput(true);\r\n  };\r\n\r\n  const submitAttendanceDate = () => {\r\n    if (!attendanceDate) {\r\n      alert('Please enter a valid date.');\r\n      return;\r\n    }\r\n\r\n    axios.post('http://localhost:3000/api/date_attendance', {\r\n      attendanceDate: attendanceDate,\r\n    })\r\n      .then(dateResponse => {\r\n        alert(\"Today's attendance added successfully\");\r\n      })\r\n      .catch(dateError => {\r\n        console.error('Error sending date to the server:', dateError);\r\n        alert(\"Error submitting today's Attendance. Please try again.\")\r\n      });\r\n\r\n    setAttendanceDate('');\r\n    setShowDateInput(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        Department:\r\n        <select\r\n          value={department}\r\n          onChange={(e) => setDepartment(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>Select Department</option>\r\n          {departments.map((dept) => (\r\n            <option key={dept.D_id} value={dept.D_name}>\r\n              {dept.D_name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Semester:\r\n        <select\r\n          value={semester}\r\n          onChange={(e) => setSemester(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>Select Semester</option>\r\n          {semesterOptions.map((sem) => (\r\n            <option key={sem} value={sem}>\r\n              {sem}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Subject:\r\n        <input\r\n          type=\"text\"\r\n          value={subject}\r\n          onInput={(e) => {\r\n            const inputValue = e.target.value;\r\n            if (/^[a-zA-Z0-9_]+$/.test(inputValue)) {\r\n              setSubject(inputValue);\r\n            }\r\n          }}\r\n          pattern=\"[a-zA-Z0-9_]+\"\r\n          title=\"Only letters, numbers, and underscores are allowed\"\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <button onClick={submitInput}>Mark Attendance</button>\r\n\r\n      {studentDetails.length > 0 && (\r\n        <>\r\n          <h2>Attendance Table</h2>\r\n          <table border=\"1\" width=\"60%\" style={{ textAlign: 'center' }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Pin</th>\r\n                <th>Name</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {studentDetails.map((student, index) => (\r\n                <tr key={index}>\r\n                  <td>{student.s_id}</td>\r\n                  <td>{student.sname}</td>\r\n                  <td><input type=\"checkbox\" id={`status${index}`} onClick={() => updateStatus(index)} /></td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button onClick={submitAttendance}>Submit</button>\r\n\r\n          <div>\r\n            <p>Click this button to add Complete today's Attendance</p>\r\n            <p>Note:-<span style={{color:'red'}}>select this only after taking all subjects Attendance</span></p>\r\n            <button onClick={handleEnterDate}>Enter Date</button>\r\n            {showDateInput && (\r\n              <>\r\n                <label htmlFor=\"attendanceDate\">Enter Attendance Date:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"attendanceDate\"\r\n                  value={attendanceDate}\r\n                  onChange={(e) => setAttendanceDate(e.target.value)}\r\n                />\r\n                <button onClick={submitAttendanceDate}>Submit Attendance Date</button>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div id=\"attendanceResult\"></div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TakeAttendance;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}